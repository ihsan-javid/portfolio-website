"use client";
import "./globals.css";
import Header from "../components/header";
import dynamic from "next/dynamic";
import { useEffect, useState } from "react";

// Dynamically import BarbaInit with ssr: false to ensure it only runs on client
const BarbaInit = dynamic(() => import("../components/barbaJsInit"), {
  ssr: false,
  loading: () => null,
});

export default function RootLayout({ children }) {
  // Use state to track if the component is mounted
  const [isMounted, setIsMounted] = useState(false);

  // Only initialize client-side features after mount
  useEffect(() => {
    setIsMounted(true);

    // Add a function to properly handle Next.js link navigation
    if (typeof window !== "undefined") {
      // Get all current navigation links
      const handleNavLinks = () => {
        const links = document.querySelectorAll('a[href^="/"]');
        links.forEach((link) => {
          // Skip links that already have the data-refresh attribute
          if (link.hasAttribute("data-refresh")) return;

          // Add the attribute to indicate it should cause a page refresh
          link.setAttribute("data-refresh", "true");
        });
      };

      // Initial handling
      handleNavLinks();

      // Set up a MutationObserver to handle dynamically added links
      const observer = new MutationObserver(() => {
        handleNavLinks();
      });

      // Observe the entire document for changes
      observer.observe(document.body, {
        childList: true,
        subtree: true,
      });

      return () => {
        observer.disconnect();
      };
    }
  }, []);

  return (
    <html lang="en">
      <head>
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
        <title>Ihsan | Portfolio</title>
        <meta name="description" content="Generated by Ihsan | Portfolio" />
      </head>
      <body>
        <Header />
        {/* Only render BarbaInit after component is mounted */}
        {isMounted && <BarbaInit />}
        <div data-scroll-container>{children}</div>
      </body>
    </html>
  );
}
